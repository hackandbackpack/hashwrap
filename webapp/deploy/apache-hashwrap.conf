# HashWrap Apache Virtual Host Configuration
# Production deployment configuration for penetration testing environment

<VirtualHost *:80>
    # Basic server configuration
    ServerName hashwrap.local
    ServerAlias www.hashwrap.local
    
    # Redirect HTTP to HTTPS for security
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>

<VirtualHost *:443>
    # Server identification
    ServerName hashwrap.local
    ServerAlias www.hashwrap.local
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/hashwrap.crt
    SSLCertificateKeyFile /etc/ssl/private/hashwrap.key
    
    # Modern SSL settings
    SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305
    SSLHonorCipherOrder on
    
    # Application paths
    DocumentRoot /opt/hashwrap/webapp
    WSGIScriptAlias / /opt/hashwrap/webapp/hashwrap.wsgi
    
    # WSGI Configuration
    WSGIDaemonProcess hashwrap python-home=/opt/hashwrap/venv python-path=/opt/hashwrap/webapp
    WSGIProcessGroup hashwrap
    WSGIScriptReloading On
    
    # Static file serving (optional - Flask can handle this in small deployments)
    Alias /static /opt/hashwrap/webapp/static
    <Directory /opt/hashwrap/webapp/static>
        Require all granted
    </Directory>
    
    # Application directory permissions
    <Directory /opt/hashwrap/webapp>
        WSGIApplicationGroup %{GLOBAL}
        Require all granted
    </Directory>
    
    # Security headers
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
    
    # Logging
    LogLevel info
    ErrorLog /var/log/apache2/hashwrap_error.log
    CustomLog /var/log/apache2/hashwrap_access.log combined
    
    # Upload limits (match Flask configuration)
    LimitRequestBody 104857600  # 100MB
    
    # Performance settings
    KeepAlive On
    MaxKeepAliveRequests 100
    KeepAliveTimeout 5
    
    # Compression
    <Location />
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
    </Location>
    
    # Rate limiting for login endpoint
    <Location /login>
        # Limit to 5 requests per minute per IP
        <RequireAll>
            Require all granted
        </RequireAll>
    </Location>
    
    # Restrict access to sensitive files
    <Files "*.db">
        Require all denied
    </Files>
    
    <Files "*.log">
        Require all denied
    </Files>
    
    <Files "secret.key">
        Require all denied
    </Files>
    
    # Block access to Python files (security)
    <FilesMatch "\.py$">
        Require all denied
    </FilesMatch>
    
    # Exception for WSGI file
    <Files "hashwrap.wsgi">
        Require all granted
    </Files>
</VirtualHost>

# Development/Testing Virtual Host (HTTP only)
<VirtualHost *:8080>
    ServerName hashwrap-dev.local
    
    # Development settings
    DocumentRoot /opt/hashwrap/webapp
    WSGIScriptAlias / /opt/hashwrap/webapp/hashwrap.wsgi
    
    WSGIDaemonProcess hashwrap-dev python-home=/opt/hashwrap/venv python-path=/opt/hashwrap/webapp
    WSGIProcessGroup hashwrap-dev
    WSGIScriptReloading On
    
    <Directory /opt/hashwrap/webapp>
        WSGIApplicationGroup %{GLOBAL}
        Require all granted
    </Directory>
    
    # Logging
    LogLevel debug
    ErrorLog /var/log/apache2/hashwrap_dev_error.log
    CustomLog /var/log/apache2/hashwrap_dev_access.log combined
</VirtualHost>